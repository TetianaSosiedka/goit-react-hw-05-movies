{"version":3,"file":"static/js/Cast.2182e022.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","api/SearchApi.jsx","hooks/useApiDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const InfoBlock = styled.p`\n  padding-top: 5px;\n  color: #329fd6;\n`;\n","import { useEffect } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\n\nimport { InfoBlock } from './Cast.styled';\nimport useApiDetails from '../../hooks/useApiDetails';\n\nconst Cast = () => {\n  const { basicUrl, profileActors, errorMessage, setApiMoveDetails } =\n    useApiDetails();\n\n  const { movieId } = useParams();\n  const locationPathname = useLocation().pathname || '';\n\n  useEffect(\n    () => setApiMoveDetails({ locationPathname, movieId }),\n    [locationPathname, movieId, setApiMoveDetails]\n  );\n\n  return (\n    <>\n      {errorMessage.length === 0 && profileActors.length === 0 && (\n        <InfoBlock>Loading ...</InfoBlock>\n      )}\n      {errorMessage.length > 0 && <InfoBlock>{errorMessage}</InfoBlock>}\n      {profileActors.length > 0 && (\n        <ul>\n          {profileActors.map(actor => {\n            const posterPath = actor.profile_path\n              ? [basicUrl, actor.profile_path].join('')\n              : 'http://dummyimage.com/150x200/329fd6.gif&text=Actor+Photo!';\n            return (\n              <li key={actor.id}>\n                <img\n                  src={posterPath}\n                  alt={actor.name}\n                  width=\"150\"\n                  loading=\"lazy\"\n                />\n                <p>{actor.name}</p>\n                <p>Character: {actor.character}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\n\nconst KEY = 'aec86298015b623e3598e86276b5a670';\nconst URL = 'https://api.themoviedb.org/3';\nconst BasicURL = 'https://image.tmdb.org/t/p/original';\n\nconst positiveResult = response => {\n  if (response.status === 200) {\n    const data = response.data.total_results !== 0 ? response.data : '';\n    return { data, BasicURL };\n  }\n};\n\nexport const TrendingMovies = async () => {\n  return axios\n    .get(`${URL}/trending/movie/day?api_key=${KEY}`)\n    .then(response => positiveResult(response));\n};\n\nexport const GetMovieDetails = async id => {\n  return axios\n    .get(`${URL}/movie/${id}?api_key=${KEY}&language=en-US`)\n    .then(response => positiveResult(response));\n};\n\nexport const GetCredits = async id => {\n  return axios\n    .get(`${URL}/movie/${id}/credits?api_key=${KEY}&language=en-US`)\n    .then(response => positiveResult(response));\n};\n\nexport const GetReviews = async id => {\n  return axios\n    .get(`${URL}/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`)\n    .then(response => positiveResult(response));\n};\n\nexport const GetSearchMoviews = async query => {\n  return axios\n    .get(\n      `${URL}/search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n    )\n    .then(response => positiveResult(response));\n};\n","import { useState, useCallback } from 'react';\n\nimport {\n  TrendingMovies,\n  GetMovieDetails,\n  GetCredits,\n  GetReviews,\n  GetSearchMoviews,\n} from '../api/SearchApi';\n\nconst useApiDetails = () => {\n  const [trendsMovies, setTrendsMovies] = useState([]);\n\n  const [basicUrl, setBasicUrl] = useState('');\n  const [title, setTitle] = useState('');\n  const [releaseDate, setReleaseDate] = useState('');\n  const [rating, setRating] = useState(0);\n  const [overview, setOverview] = useState('');\n  const [genres, setGenres] = useState([]);\n  const [poster, setPoster] = useState('');\n\n  const [profileActors, setProfileActors] = useState([]);\n\n  const [reviews, setReviews] = useState([]);\n\n  const [searchMoviews, setSearchMoviews] = useState([]);\n\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const getTrendingMovies = () => {\n    TrendingMovies()\n      .then(({ data }) => {\n        if (!data) {\n          return;\n        }\n        setTrendsMovies(data.results);\n      })\n      .catch(error => {\n        console.log(error.message);\n        setErrorMessage('Request error !!!');\n      });\n  };\n\n  const getMoveiDelalies = movieId => {\n    GetMovieDetails(movieId)\n      .then(({ data, BasicURL }) => {\n        if (!data) {\n          return;\n        }\n        setBasicUrl(BasicURL);\n        setTitle(data.original_title);\n        setReleaseDate(data.release_date.slice(0, 4));\n        setRating(data.vote_average);\n        setOverview(data.overview);\n        setGenres(data.genres);\n        setPoster(data.poster_path);\n      })\n      .catch(error => {\n        console.log(error.message);\n        setErrorMessage('Request error !!!');\n      });\n  };\n\n  const setCredits = movieId => {\n    GetCredits(movieId)\n      .then(({ data, BasicURL }) => {\n        if (!data) {\n          return;\n        }\n        setProfileActors(data.cast);\n        setBasicUrl(BasicURL);\n      })\n      .catch(error => {\n        console.log(error.message);\n        setErrorMessage('Request error !!!');\n      });\n  };\n\n  const getReview = movieId => {\n    GetReviews(movieId)\n      .then(({ data }) => {\n        if (!data) {\n          return;\n        }\n        setReviews(data.results);\n      })\n      .catch(error => {\n        console.log(error.message);\n        setErrorMessage('Request error !!!');\n      });\n  };\n\n  const getSearchMoviews = query => {\n    GetSearchMoviews(query)\n      .then(({ data }) => {\n        setSearchMoviews(data.results);\n        setErrorMessage('');\n      })\n      .catch(error => {\n        console.log(error.message);\n        setSearchMoviews([]);\n        setErrorMessage(`By request ${query} nothing was found.`);\n      });\n  };\n\n  const setApiMoveDetails = useCallback(\n    ({ locationPathname, movieId = 0, query = '' }) => {\n      switch (locationPathname) {\n        case '/':\n          getTrendingMovies();\n          break;\n\n        case `/movies/${movieId}`:\n          getMoveiDelalies(movieId);\n          break;\n\n        case `/movies/${movieId}/cast`:\n          getMoveiDelalies(movieId);\n          setCredits(movieId);\n          break;\n\n        case `/movies/${movieId}/reviews`:\n          getMoveiDelalies(movieId);\n          getReview(movieId);\n          break;\n\n        case `/movies?query=${query}`:\n          getSearchMoviews(query);\n          break;\n\n        default:\n          console.log('hook error');\n          break;\n      }\n    },\n    []\n  );\n\n  return {\n    errorMessage,\n    trendsMovies,\n    basicUrl,\n    title,\n    releaseDate,\n    rating,\n    overview,\n    genres,\n    poster,\n    profileActors,\n    reviews,\n    searchMoviews,\n    setApiMoveDetails,\n  };\n};\n\nexport default useApiDetails;\n"],"names":["InfoBlock","styled","useApiDetails","basicUrl","profileActors","errorMessage","setApiMoveDetails","movieId","useParams","locationPathname","useLocation","pathname","useEffect","length","map","actor","posterPath","profile_path","join","src","alt","name","width","loading","character","id","KEY","URL","positiveResult","response","status","data","total_results","BasicURL","TrendingMovies","axios","then","GetMovieDetails","GetCredits","GetReviews","GetSearchMoviews","query","useState","trendsMovies","setTrendsMovies","setBasicUrl","title","setTitle","releaseDate","setReleaseDate","rating","setRating","overview","setOverview","genres","setGenres","poster","setPoster","setProfileActors","reviews","setReviews","searchMoviews","setSearchMoviews","setErrorMessage","getMoveiDelalies","original_title","release_date","slice","vote_average","poster_path","catch","error","console","log","message","useCallback","results","cast","setCredits","getReview","getSearchMoviews"],"sourceRoot":""}