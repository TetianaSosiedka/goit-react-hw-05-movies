{"version":3,"file":"static/js/Reviews.d192fc8f.chunk.js","mappings":"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","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","api/SearchApi.jsx","hooks/useApiDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const InfoBlock = styled.p`\n  padding-top: 5px;\n  color: #329fd6;\n`;\n","import { useLayoutEffect } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\n\nimport { InfoBlock } from './Reviews.styled';\n\nimport useApiDetails from '../../hooks/useApiDetails';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const locationPathname = useLocation().pathname || '';\n\n  const { reviews, errorMessage, setApiMoveDetails } = useApiDetails();\n\n  useLayoutEffect(\n    () => setApiMoveDetails({ locationPathname, movieId }),\n    [locationPathname, movieId, setApiMoveDetails]\n  );\n\n  return (\n    <>\n      {errorMessage.length > 0 && <InfoBlock>{errorMessage}</InfoBlock>}\n      <ul>\n        {reviews.length ? (\n          reviews.map(review => (\n            <li key={review.id}>\n              <h3>Author: {review.author}</h3>\n              <p>\"{review.content}\"</p>\n            </li>\n          ))\n        ) : (\n          <li>We don't have any reviews for this movie</li>\n        )}\n      </ul>\n    </>\n  );\n};\nexport default Reviews;\n","import axios from 'axios';\n\nconst KEY = 'aec86298015b623e3598e86276b5a670';\nconst URL = 'https://api.themoviedb.org/3';\nconst BasicURL = 'https://image.tmdb.org/t/p/original';\n\nconst positiveResult = response => {\n  if (response.status === 200) {\n    const data = response.data.total_results !== 0 ? response.data : '';\n    return { data, BasicURL };\n  }\n};\n\nexport const TrendingMovies = async () => {\n  return axios\n    .get(`${URL}/trending/movie/day?api_key=${KEY}`)\n    .then(response => positiveResult(response));\n};\n\nexport const GetMovieDetails = async id => {\n  return axios\n    .get(`${URL}/movie/${id}?api_key=${KEY}&language=en-US`)\n    .then(response => positiveResult(response));\n};\n\nexport const GetCredits = async id => {\n  return axios\n    .get(`${URL}/movie/${id}/credits?api_key=${KEY}&language=en-US`)\n    .then(response => positiveResult(response));\n};\n\nexport const GetReviews = async id => {\n  return axios\n    .get(`${URL}/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`)\n    .then(response => positiveResult(response));\n};\n\nexport const GetSearchMoviews = async query => {\n  return axios\n    .get(\n      `${URL}/search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n    )\n    .then(response => positiveResult(response));\n};\n","import { useState, useCallback } from 'react';\n\nimport {\n  TrendingMovies,\n  GetMovieDetails,\n  GetCredits,\n  GetReviews,\n  GetSearchMoviews,\n} from '../api/SearchApi';\n\nconst useApiDetails = () => {\n  const [trendsMovies, setTrendsMovies] = useState([]);\n\n  const [basicUrl, setBasicUrl] = useState('');\n  const [title, setTitle] = useState('');\n  const [releaseDate, setReleaseDate] = useState('');\n  const [rating, setRating] = useState(0);\n  const [overview, setOverview] = useState('');\n  const [genres, setGenres] = useState([]);\n  const [poster, setPoster] = useState('');\n\n  const [profileActors, setProfileActors] = useState([]);\n\n  const [reviews, setReviews] = useState([]);\n\n  const [searchMoviews, setSearchMoviews] = useState([]);\n\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const getTrendingMovies = () => {\n    TrendingMovies()\n      .then(({ data }) => {\n        if (!data) {\n          return;\n        }\n        setTrendsMovies(data.results);\n      })\n      .catch(error => {\n        console.log(error.message);\n        setErrorMessage('Request error !!!');\n      });\n  };\n\n  const getMoveiDelalies = movieId => {\n    GetMovieDetails(movieId)\n      .then(({ data, BasicURL }) => {\n        if (!data) {\n          return;\n        }\n        setBasicUrl(BasicURL);\n        setTitle(data.original_title);\n        setReleaseDate(data.release_date.slice(0, 4));\n        setRating(data.vote_average);\n        setOverview(data.overview);\n        setGenres(data.genres);\n        setPoster(data.poster_path);\n      })\n      .catch(error => {\n        console.log(error.message);\n        setErrorMessage('Request error !!!');\n      });\n  };\n\n  const setCredits = movieId => {\n    GetCredits(movieId)\n      .then(({ data, BasicURL }) => {\n        if (!data) {\n          return;\n        }\n        setProfileActors(data.cast);\n        setBasicUrl(BasicURL);\n      })\n      .catch(error => {\n        console.log(error.message);\n        setErrorMessage('Request error !!!');\n      });\n  };\n\n  const getReview = movieId => {\n    GetReviews(movieId)\n      .then(({ data }) => {\n        if (!data) {\n          return;\n        }\n        setReviews(data.results);\n      })\n      .catch(error => {\n        console.log(error.message);\n        setErrorMessage('Request error !!!');\n      });\n  };\n\n  const getSearchMoviews = query => {\n    GetSearchMoviews(query)\n      .then(({ data }) => {\n        setSearchMoviews(data.results);\n        setErrorMessage('');\n      })\n      .catch(error => {\n        console.log(error.message);\n        setSearchMoviews([]);\n        setErrorMessage(`By request ${query} nothing was found.`);\n      });\n  };\n\n  const setApiMoveDetails = useCallback(\n    ({ locationPathname, movieId = 0, query = '' }) => {\n      switch (locationPathname) {\n        case '/':\n          getTrendingMovies();\n          break;\n\n        case `/movies/${movieId}`:\n          getMoveiDelalies(movieId);\n          break;\n\n        case `/movies/${movieId}/cast`:\n          getMoveiDelalies(movieId);\n          setCredits(movieId);\n          break;\n\n        case `/movies/${movieId}/reviews`:\n          getMoveiDelalies(movieId);\n          getReview(movieId);\n          break;\n\n        case `/movies?query=${query}`:\n          getSearchMoviews(query);\n          break;\n\n        default:\n          console.log('hook error');\n          break;\n      }\n    },\n    []\n  );\n\n  return {\n    errorMessage,\n    trendsMovies,\n    basicUrl,\n    title,\n    releaseDate,\n    rating,\n    overview,\n    genres,\n    poster,\n    profileActors,\n    reviews,\n    searchMoviews,\n    setApiMoveDetails,\n  };\n};\n\nexport default useApiDetails;\n"],"names":["InfoBlock","styled","movieId","useParams","locationPathname","useLocation","pathname","useApiDetails","reviews","errorMessage","setApiMoveDetails","useLayoutEffect","length","map","review","author","content","id","KEY","URL","positiveResult","response","status","data","total_results","BasicURL","TrendingMovies","axios","then","GetMovieDetails","GetCredits","GetReviews","GetSearchMoviews","query","useState","trendsMovies","setTrendsMovies","basicUrl","setBasicUrl","title","setTitle","releaseDate","setReleaseDate","rating","setRating","overview","setOverview","genres","setGenres","poster","setPoster","profileActors","setProfileActors","setReviews","searchMoviews","setSearchMoviews","setErrorMessage","getMoveiDelalies","original_title","release_date","slice","vote_average","poster_path","catch","error","console","log","message","useCallback","results","cast","setCredits","getReview","getSearchMoviews"],"sourceRoot":""}