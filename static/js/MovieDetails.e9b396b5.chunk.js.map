{"version":3,"file":"static/js/MovieDetails.e9b396b5.chunk.js","mappings":"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","sources":["api/SearchApi.jsx","hooks/useApiDetails.jsx","components/ButtonBack/ButtonBack.styled.jsx","components/ButtonBack/ButtonBack.jsx","components/GetMovieDetails/GetMoviesDetails.styled.jsx","components/GetMovieDetails/GetMoviesDetails.jsx","pages/movieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = 'aec86298015b623e3598e86276b5a670';\nconst URL = 'https://api.themoviedb.org/3';\nconst BasicURL = 'https://image.tmdb.org/t/p/original';\n\nconst positiveResult = response => {\n  if (response.status === 200 && response.data.total_results !== 0) {\n    return { data: response.data, BasicURL };\n  }\n};\n\nexport const TrendingMovies = async () => {\n  return axios\n    .get(`${URL}/trending/movie/day?api_key=${KEY}`)\n    .then(response => positiveResult(response));\n};\n\nexport const GetMovieDetails = async id => {\n  return axios\n    .get(`${URL}/movie/${id}?api_key=${KEY}&language=en-US`)\n    .then(response => positiveResult(response));\n};\n\nexport const GetCredits = async id => {\n  return axios\n    .get(`${URL}/movie/${id}/credits?api_key=${KEY}&language=en-US`)\n    .then(response => positiveResult(response));\n};\n\nexport const GetReviews = async id => {\n  return axios\n    .get(`${URL}/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`)\n    .then(response => positiveResult(response));\n};\n\nexport const GetSearchMoviews = async query => {\n  return axios\n    .get(\n      `${URL}/search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n    )\n    .then(response => positiveResult(response));\n};\n","import { useState, useCallback } from 'react';\n\nimport {\n  TrendingMovies,\n  GetMovieDetails,\n  GetCredits,\n  GetReviews,\n  GetSearchMoviews,\n} from '../api/SearchApi';\n\nconst useApiDetails = () => {\n  const [trendsMovies, setTrendsMovies] = useState([]);\n\n  const [basicUrl, setBasicUrl] = useState('');\n  const [title, setTitle] = useState('');\n  const [releaseDate, setReleaseDate] = useState('');\n  const [rating, setRating] = useState(0);\n  const [overview, setOverview] = useState('');\n  const [genres, setGenres] = useState([]);\n  const [poster, setPoster] = useState('');\n\n  const [profileActors, setProfileActors] = useState([]);\n\n  const [reviews, setReviews] = useState();\n\n  const [searchMoviews, setSearchMoviews] = useState([]);\n\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const getTrendingMovies = () => {\n    TrendingMovies()\n      .then(({ data }) => {\n        setTrendsMovies(data.results);\n      })\n      .catch(error => {\n        console.log(error.message);\n        setErrorMessage('Request error !!!');\n      });\n  };\n\n  const getMoveiDelalies = movieId => {\n    GetMovieDetails(movieId)\n      .then(({ data, BasicURL }) => {\n        setBasicUrl(BasicURL);\n        setTitle(data.original_title);\n        setReleaseDate(data.release_date.slice(0, 4));\n        setRating(data.vote_average);\n        setOverview(data.overview);\n        setGenres(data.genres);\n        setPoster(data.poster_path);\n      })\n      .catch(error => {\n        console.log(error.message);\n        return error.message;\n      });\n  };\n\n  const setCredits = movieId => {\n    GetCredits(movieId)\n      .then(({ data, BasicURL }) => {\n        setProfileActors(data.cast);\n        setBasicUrl(BasicURL);\n      })\n      .catch(error => {\n        console.log(error.message);\n        return error.message;\n      });\n  };\n\n  const getReview = movieId => {\n    GetReviews(movieId)\n      .then(({ data }) => {\n        setReviews(data.results);\n      })\n      .catch(error => {\n        console.log(error.message);\n        return error.message;\n      });\n  };\n\n  const getSearchMoviews = query => {\n    GetSearchMoviews(query)\n      .then(({ data }) => {\n        setSearchMoviews(data.results);\n        setErrorMessage('');\n      })\n      .catch(error => {\n        console.log(error.message);\n        setSearchMoviews([]);\n        setErrorMessage(`By request ${query} nothing was found.`);\n      });\n  };\n\n  const setApiMoveDetails = useCallback(\n    ({ locationPathname, movieId = 0, query = '' }) => {\n      switch (locationPathname) {\n        case '/':\n          getTrendingMovies();\n          break;\n\n        case `/movies/${movieId}`:\n          getMoveiDelalies(movieId);\n          break;\n\n        case `/movies/${movieId}/cast`:\n          setCredits(movieId);\n          break;\n\n        case `/movies/${movieId}/reviews`:\n          getReview(movieId);\n          break;\n\n        case `/movies?query=${query}`:\n          getSearchMoviews(query);\n          break;\n\n        default:\n          console.log('hook error');\n          break;\n      }\n    },\n    []\n  );\n\n  return {\n    errorMessage,\n    trendsMovies,\n    basicUrl,\n    title,\n    releaseDate,\n    rating,\n    overview,\n    genres,\n    poster,\n    profileActors,\n    reviews,\n    searchMoviews,\n    setApiMoveDetails,\n  };\n};\n\nexport default useApiDetails;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  margin-top: 15px;\n  padding: 5px 8px;\n  font-size: 15px;\n  background-color: transparent;\n  &:hover,\n  &:focus {\n    color: #329fd6;\n    border-color: #329fd6;\n  }\n  span {\n    margin-right: 3px;\n    font-weight: bold;\n  }\n`;\n","import { useNavigate } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { Button } from './ButtonBack.styled';\n\nconst ButtonBack = ({ locationParam }) => {\n  const navigate = useNavigate();\n\n  const goBack = () => {\n    if (!locationParam) {\n      navigate('/');\n      return;\n    }\n    navigate(`/movies?query=${locationParam}`);\n  };\n\n  return (\n    <Button type=\"button\" onClick={goBack}>\n      <span>&lArr;</span> Go back\n    </Button>\n  );\n};\n\nButtonBack.propTypes = {\n  locationParam: PropTypes.string,\n};\n\nexport default ButtonBack;\n","import styled from 'styled-components';\n\nexport const Article = styled.article`\n  margin-top: 15px;\n  padding-bottom: 15px;\n  display: flex;\n  flex-direction: row-reverse;\n  border-bottom: solid #d1d1d3 4px;\n`;\n\nexport const InformationBlock = styled.div``;\n\nexport const Poster = styled.img`\n  margin-right: 15px;\n`;\n\nexport const AdditionalBlock = styled.div`\n  ul {\n    margin-bottom: 10px;\n    padding-bottom: 10px;\n    border-bottom: solid #d1d1d3 4px;\n  }\n\n  li {\n    padding: 5px 0;\n    &:hover,\n    &:focus {\n      background-color: #f0f3f7;\n    }\n    a {\n      color: #000000;\n    }\n  }\n`;\nexport const InfoBlock = styled.p`\n  padding-top: 5px;\n  color: #329fd6;\n`;\n","import { useParams, useLocation, Link, Outlet } from 'react-router-dom';\nimport { useEffect } from 'react';\n\nimport {\n  Article,\n  Poster,\n  InformationBlock,\n  AdditionalBlock,\n  InfoBlock,\n} from './GetMoviesDetails.styled';\n\nimport useApiDetails from '../../hooks/useApiDetails';\n\nconst GetMoviesDetails = () => {\n  const locationPathname = useLocation().pathname;\n  const { movieId } = useParams();\n\n  const {\n    errorMessage,\n    basicUrl,\n    title,\n    releaseDate,\n    rating,\n    overview,\n    genres,\n    poster,\n    setApiMoveDetails,\n  } = useApiDetails();\n\n  useEffect(() => {\n    setApiMoveDetails({ locationPathname, movieId });\n  }, [locationPathname, movieId, setApiMoveDetails]);\n\n  const renderGanres = () => {\n    const ganresArr = [];\n    genres.map(item => ganresArr.push(item.name));\n    return ganresArr.join(', ');\n  };\n\n  return (\n    <>\n      {errorMessage.length === 0 && title.length === 0 && (\n        <InfoBlock>Loading ...</InfoBlock>\n      )}\n      {title.length > 0 && (\n        <>\n          <Article>\n            <InformationBlock>\n              <h2>\n                {title} ({releaseDate})\n              </h2>\n              <p>User Score: {rating}</p>\n              <h3>Overvlew</h3>\n              <p>{overview}</p>\n              <h3>Genres: </h3>\n              <p>{renderGanres()}</p>\n            </InformationBlock>\n            <Poster\n              src={[basicUrl, poster].join('')}\n              alt={title}\n              height=\"300\"\n            />\n          </Article>\n          <AdditionalBlock>\n            <h3>Additional information:</h3>\n            <ul>\n              <li>\n                <Link to=\"cast\">Cast</Link>\n              </li>\n              <li>\n                <Link to=\"reviews\">Reviews</Link>\n              </li>\n            </ul>\n            <Outlet />\n          </AdditionalBlock>\n        </>\n      )}\n      {errorMessage.length > 0 && <InfoBlock>{errorMessage}</InfoBlock>}\n    </>\n  );\n};\nexport default GetMoviesDetails;\n","import ButtonBack from '../components/ButtonBack';\nimport GetMovieDetails from '../components/GetMovieDetails';\n\nconst MovieDetails = ({ locationParam }) => {\n  return (\n    <main>\n      <ButtonBack locationParam={locationParam} />\n      <GetMovieDetails />\n    </main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["KEY","URL","positiveResult","response","status","data","total_results","BasicURL","TrendingMovies","axios","then","GetMovieDetails","id","GetCredits","GetReviews","GetSearchMoviews","query","useState","trendsMovies","setTrendsMovies","basicUrl","setBasicUrl","title","setTitle","releaseDate","setReleaseDate","rating","setRating","overview","setOverview","genres","setGenres","poster","setPoster","profileActors","setProfileActors","reviews","setReviews","searchMoviews","setSearchMoviews","errorMessage","setErrorMessage","setApiMoveDetails","useCallback","locationPathname","movieId","results","catch","error","console","log","message","original_title","release_date","slice","vote_average","poster_path","getMoveiDelalies","cast","setCredits","getReview","getSearchMoviews","Button","styled","locationParam","navigate","useNavigate","type","onClick","Article","InformationBlock","Poster","AdditionalBlock","InfoBlock","useLocation","pathname","useParams","useApiDetails","useEffect","length","ganresArr","map","item","push","name","join","renderGanres","src","alt","height","to"],"sourceRoot":""}