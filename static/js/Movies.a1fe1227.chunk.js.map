{"version":3,"file":"static/js/Movies.a1fe1227.chunk.js","mappings":"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","sources":["api/SearchApi.jsx","hooks/useApiDetails.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","components/ListSeacrMovies/ListSeacrMovies.styled.jsx","components/ListSeacrMovies/ListSeacrMovies.jsx","pages/movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = 'aec86298015b623e3598e86276b5a670';\nconst URL = 'https://api.themoviedb.org/3';\nconst BasicURL = 'https://image.tmdb.org/t/p/original';\n\nconst positiveResult = response => {\n  if (response.status === 200 && response.data.total_results !== 0) {\n    return { data: response.data, BasicURL };\n  }\n};\n\nexport const TrendingMovies = async () => {\n  return axios\n    .get(`${URL}/trending/movie/day?api_key=${KEY}`)\n    .then(response => positiveResult(response));\n};\n\nexport const GetMovieDetails = async id => {\n  return axios\n    .get(`${URL}/movie/${id}?api_key=${KEY}&language=en-US`)\n    .then(response => positiveResult(response));\n};\n\nexport const GetCredits = async id => {\n  return axios\n    .get(`${URL}/movie/${id}/credits?api_key=${KEY}&language=en-US`)\n    .then(response => positiveResult(response));\n};\n\nexport const GetReviews = async id => {\n  return axios\n    .get(`${URL}/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`)\n    .then(response => positiveResult(response));\n};\n\nexport const GetSearchMoviews = async query => {\n  return axios\n    .get(\n      `${URL}/search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n    )\n    .then(response => positiveResult(response));\n};\n","import { useState, useCallback } from 'react';\n\nimport {\n  TrendingMovies,\n  GetMovieDetails,\n  GetCredits,\n  GetReviews,\n  GetSearchMoviews,\n} from '../api/SearchApi';\n\nconst useApiDetails = () => {\n  const [trendsMovies, setTrendsMovies] = useState([]);\n\n  const [basicUrl, setBasicUrl] = useState('');\n  const [title, setTitle] = useState('');\n  const [releaseDate, setReleaseDate] = useState('');\n  const [rating, setRating] = useState(0);\n  const [overview, setOverview] = useState('');\n  const [genres, setGenres] = useState([]);\n  const [poster, setPoster] = useState('');\n\n  const [profileActors, setProfileActors] = useState([]);\n\n  const [reviews, setReviews] = useState();\n\n  const [searchMoviews, setSearchMoviews] = useState([]);\n\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const getTrendingMovies = () => {\n    TrendingMovies()\n      .then(({ data }) => {\n        setTrendsMovies(data.results);\n      })\n      .catch(error => {\n        console.log(error.message);\n        setErrorMessage('Request error !!!');\n      });\n  };\n\n  const getMoveiDelalies = movieId => {\n    GetMovieDetails(movieId)\n      .then(({ data, BasicURL }) => {\n        setBasicUrl(BasicURL);\n        setTitle(data.original_title);\n        setReleaseDate(data.release_date.slice(0, 4));\n        setRating(data.vote_average);\n        setOverview(data.overview);\n        setGenres(data.genres);\n        setPoster(data.poster_path);\n      })\n      .catch(error => {\n        console.log(error.message);\n        return error.message;\n      });\n  };\n\n  const setCredits = movieId => {\n    GetCredits(movieId)\n      .then(({ data, BasicURL }) => {\n        setProfileActors(data.cast);\n        setBasicUrl(BasicURL);\n      })\n      .catch(error => {\n        console.log(error.message);\n        return error.message;\n      });\n  };\n\n  const getReview = movieId => {\n    GetReviews(movieId)\n      .then(({ data }) => {\n        setReviews(data.results);\n      })\n      .catch(error => {\n        console.log(error.message);\n        return error.message;\n      });\n  };\n\n  const getSearchMoviews = query => {\n    GetSearchMoviews(query)\n      .then(({ data }) => {\n        setSearchMoviews(data.results);\n        setErrorMessage('');\n      })\n      .catch(error => {\n        console.log(error.message);\n        setSearchMoviews([]);\n        setErrorMessage(`By request ${query} nothing was found.`);\n      });\n  };\n\n  const setApiMoveDetails = useCallback(\n    ({ locationPathname, movieId = 0, query = '' }) => {\n      switch (locationPathname) {\n        case '/':\n          getTrendingMovies();\n          break;\n\n        case `/movies/${movieId}`:\n          getMoveiDelalies(movieId);\n          break;\n\n        case `/movies/${movieId}/cast`:\n          setCredits(movieId);\n          break;\n\n        case `/movies/${movieId}/reviews`:\n          getReview(movieId);\n          break;\n\n        case `/movies?query=${query}`:\n          getSearchMoviews(query);\n          break;\n\n        default:\n          console.log('hook error');\n          break;\n      }\n    },\n    []\n  );\n\n  return {\n    errorMessage,\n    trendsMovies,\n    basicUrl,\n    title,\n    releaseDate,\n    rating,\n    overview,\n    genres,\n    poster,\n    profileActors,\n    reviews,\n    searchMoviews,\n    setApiMoveDetails,\n  };\n};\n\nexport default useApiDetails;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  margin-top: 15px;\n  input {\n    padding: 5px 8px;\n    border: solid 2px #000000;\n    font-size: 15px;\n    &:focus {\n      color: #329fd6;\n    }\n  }\n  button {\n    padding: 5px 8px;\n    font-size: 15px;\n    background-color: transparent;\n    &:hover,\n    &:focus {\n      color: #329fd6;\n      border-color: #329fd6;\n    }\n    &[disabled] {\n      background-color: #e9e9ec9f;\n    }\n  }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Form } from './SearchForm.styled';\n\nconst SearchForm = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n  const [disabled, setDisabled] = useState(true);\n\n  const handleInputName = event => {\n    setQuery(event.target.value);\n\n    if (query.trim() !== '') {\n      setDisabled(false);\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    onSubmit(query);\n\n    setQuery('');\n    setDisabled('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <input\n        onChange={handleInputName}\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        value={query}\n      />\n\n      <button type=\"submit\" disabled={disabled}>\n        Search\n      </button>\n    </Form>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchForm;\n","import styled from 'styled-components';\n\nexport const Ul = styled.ul`\n  margin-top: 15px;\n  padding-bottom: 15px;\n  span {\n    color: #329fd6;\n  }\n`;\nexport const InfoBlock = styled.p`\n  padding-top: 5px;\n  color: #329fd6;\n`;\n","import { useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { Ul, InfoBlock } from './ListSeacrMovies.styled';\n\nimport useApiDetails from '../../hooks/useApiDetails';\n\nconst ListSeacrMovies = ({ query }) => {\n  const locationPathname = `${useLocation().pathname || ''}${\n    useLocation().search || ''\n  }`;\n\n  const { errorMessage, searchMoviews, setApiMoveDetails } = useApiDetails();\n\n  useEffect(() => {\n    if (query) {\n      setApiMoveDetails({ locationPathname, query });\n    }\n  }, [locationPathname, setApiMoveDetails, query]);\n\n  return (\n    <>\n      {errorMessage.length === 0 && searchMoviews.length === 0 && (\n        <InfoBlock>Loading ...</InfoBlock>\n      )}\n      {errorMessage.length > 0 && <InfoBlock>{errorMessage}</InfoBlock>}\n      {searchMoviews.length > 0 && (\n        <Ul>\n          {searchMoviews.map(item => (\n            <li key={item.id}>\n              <Link to={`${item.id}`}>{item.original_title}</Link>\n            </li>\n          ))}\n        </Ul>\n      )}\n    </>\n  );\n};\n\nListSeacrMovies.propTypes = {\n  query: PropTypes.string.isRequired,\n};\n\nexport default ListSeacrMovies;\n","import { useSearchParams } from 'react-router-dom';\n\nimport SearchForm from '../components/SearchForm';\nimport ListSeacrMovies from '../components/ListSeacrMovies';\n\nconst Movies = ({ onLocation }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  const getSearchTitle = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n    onLocation(query);\n  };\n\n  return (\n    <main>\n      <SearchForm onSubmit={getSearchTitle} />\n      {query && <ListSeacrMovies query={query} />}\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["KEY","URL","positiveResult","response","status","data","total_results","BasicURL","TrendingMovies","axios","then","GetMovieDetails","id","GetCredits","GetReviews","GetSearchMoviews","query","useState","trendsMovies","setTrendsMovies","basicUrl","setBasicUrl","title","setTitle","releaseDate","setReleaseDate","rating","setRating","overview","setOverview","genres","setGenres","poster","setPoster","profileActors","setProfileActors","reviews","setReviews","searchMoviews","setSearchMoviews","errorMessage","setErrorMessage","setApiMoveDetails","useCallback","locationPathname","movieId","results","catch","error","console","log","message","original_title","release_date","slice","vote_average","poster_path","getMoveiDelalies","cast","setCredits","getReview","getSearchMoviews","Form","styled","onSubmit","setQuery","disabled","setDisabled","event","preventDefault","onChange","target","value","trim","type","autoComplete","autoFocus","placeholder","Ul","InfoBlock","useLocation","pathname","search","useApiDetails","useEffect","length","map","item","to","onLocation","useSearchParams","searchParams","setSearchParams","get"],"sourceRoot":""}